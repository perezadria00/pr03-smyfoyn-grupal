name: Symfony CI Pipeline

on:
  push:
    branches:
      - main
      - 20-configurar-servicio-de-integración-continua
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

    env:
      APP_ENV: test
      DATABASE_URL: mysql://root@127.0.0.1:3306/nurses_administration

    steps:
    # Paso 1: Clonar el repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # Paso 2: Configurar PHP
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: mbstring, intl, pdo_mysql
        ini-values: memory_limit=-1
        coverage: none

    # Paso 3: Instalar dependencias de Composer
    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    # Paso 4: Esperar a que MySQL esté listo
    - name: Wait for MySQL to be ready
      run: |
        for i in {1..10}; do
          if mysql -h 127.0.0.1 -P 3306 -u root -e "SELECT 1;" > /dev/null 2>&1; then
            echo "MySQL is ready"
            break
          fi
          echo "Waiting for MySQL..."
          sleep 5
        done

    # Paso 5: Crear la base de datos de pruebas
    - name: Create database
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -e "CREATE DATABASE IF NOT EXISTS nurses_administration;"

    # Paso 6: Configurar la base de datos con Doctrine
    - name: Set up database
      run: php bin/console doctrine:schema:update --force --env=test

    # Paso 7: Ejecutar pruebas unitarias
    - name: Run PHPUnit tests
      run: php bin/phpunit
